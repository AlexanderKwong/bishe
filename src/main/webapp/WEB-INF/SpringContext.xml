<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 注释配置 -->
	<context:annotation-config />
	<context:component-scan
		base-package="org.kwong.bishe" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg value="text" />
								<constructor-arg value="plain" />
								<constructor-arg value="UTF-8" />
							</bean>
						</list>
					</property>
				</bean>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- <value>text/html;charset=UTF-8</value> -->
				<value>application/json;charset=utf-8</value>
			</list>
		</property>
		<!-- 处理返回json的时间格式 -->
		<property name="objectMapper" ref="customObjectMapper"></property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<!-- <property name="interceptors"> 多个拦截器,顺序执行 <list> <ref bean="ShareRenderArgsVariableInterceptor"/> 
			</list> </property> -->
	</bean>
	<!-- 如果不定义mappingURL，则默认拦截所有对Controller的请求 ; 可以使用正则表达式对url进行匹配，从而更细粒度的进行拦截(.*/entryOrJsonController\.do\?action=reg.*); -->
	<!-- <bean id="ShareRenderArgsVariableInterceptor" class="qtone.video.common.ShareRenderArgsVariableInterceptor"> 
		</bean> -->

	<!-- ***************************数据连接池********************************************************* -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
 <!--		 <property name="url" value="jdbc:oracle:thin:@192.168.1.3:1521/qkw" />
 		<property name="username" value="kuangxiaolin" />
		<property name="password" value="jTSk#4u398" />      -->
		 <property name="url" value="jdbc:oracle:thin:@192.168.1.124:1521/sgxx" />
		<property name="username" value="bbxt" />
		<property name="password" value="bwJw8427k$lfd" />     

		
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="50" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- <property name="validationQuery" value="SELECT 'x'" /> -->
		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 --><!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 关闭长时间不实用的链接 -->
		<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="3600" /> <!-- 3600秒，也就是60分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->

		<!-- 配置监控统计拦截的filters -->
		<!-- <property name="filters" value="log4j,stat" /> <property name="proxyFilters"> 
			<list> <ref bean="stat-filter" /> </list> </property> -->
	</bean>

	<!-- 进行事务控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="nestedTransactionAllowed" value="true" /> <property 
			name="validateExistingTransaction" value="true" /> -->
	</bean>




	<!-- enable transaction demarcation with annotations -->
	<!-- <tx:annotation-driven /> -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="messageAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!--Session工厂类的配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:org/kwong/bishe/persistence/map/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- 自动加载对应的 数据访问层接口类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="qtone.yyj.persistence" />
		<!-- <property name="markerInterface" value="lzserj.dao.mapper.MyBatisMapper" 
			/> -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="${vm.rootPath}"></property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="false"></property>
		<property name="prefix" value="/web/html/"></property>
		<property name="suffix" value="${vm.suffix}" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/view.properties</value>
			</list>
		</property>
	</bean>

	<bean class="org.kwong.bishe.common.util.InstantiationTracingBeanPostProcessor" />
	<bean id="customObjectMapper" class="org.kwong.bishe.context.view.base.util.CustomObjectMapper"></bean>

</beans> 